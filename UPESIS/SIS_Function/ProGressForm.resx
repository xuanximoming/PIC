<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Hx4AAAAASUVORK5CYII=
</value>
  </data>
</root>