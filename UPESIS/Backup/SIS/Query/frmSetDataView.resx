<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Down.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yL2ZJq9LGAEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btn_Up.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>